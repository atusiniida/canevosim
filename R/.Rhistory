ls
if(!any(objects()=="infile")){
infile<-"in.tab"
}
E<-as.matrix(read.table(infile))
library('dynamicTreeCut')
D<-dist(E)
h<-hclust(D)
c<-NULL
for(i in 1:length(l)){
c<-c(c, length(unique(cutree(h, h=l[i]))))
}
plot(log10(l),log10(c))
l<-l[l!=0]
c<-c[l!=0]
#c2<-unique(c)
#l2<-NULL
#for(i in 1:length(c2)){
#  if(length(which(c==c2[i]))>1){
#    l2<-c(l2, median(l[c==c2[i]]))
#  }else{
#    l2<-c(l2,l[c==c2[i]])
#  }
#}
c2<-log10(c)
l2<-log10(l)
tmp<-which(l2<2.5)
l3<-l2[tmp]
c3<-c2[tmp]
tmp<-data.frame(cbind(l2,c2))
tmp2<-data.frame(cbind(l3,c3))
names(tmp)<-c("l","c")
names(tmp2)<-c("l","c")
plot(c ~ l, data = tmp)
result <- lm(c ~ l, data = tmp2)
abline(result)
summary(result)
source('~/Dropbox/research/saisentan/test.R')
?dist
M<-read.table("pathwayMutProfile.tab")
heatmap(M)
M
M<-as.matrix(read.table("pathwayMutProfile.tab"))
heatmap(M)
image(M)
source('~/Dropbox/test.R')
source('~/Dropbox/test.R')
source('~/Dropbox/test.R')
setwd(..)
setwd("..")
source('~/Dropbox/test.R')
setwd("~")
source('~/Dropbox/test.R')
source('test.R')
source('~/Dropbox/test.R')
source('~/Dropbox/test.R')
source('~/Dropbox/test.R')
source('~/test.R')
file<-"https://www.hgc.jp/~niiyan/tmp/breastMiller.tab"
E<-as.matrix(read.table(file))
file<-"https://www.hgc.jp/~niiyan/tmp/breastMiller_annot.tab"
A<-as.matrix(read.table(file))
E100<-E[names(rev(sort(apply(E,1,var)))[1:100]),] #variation filter, names:matrix
A<-t(A)
#heatmapをかく
heatmap(dist(t(E100)))
plot(NA)
plot(NA, xlim=c(0,100), ylim=c(0,100))
plot(NULL, xlim=c(0,100), ylim=c(0,100))
plot(1, xlim=c(0,100), ylim=c(0,100))
A<-c(1,3,4,5)
B<-c(1,2,3,6)
A
B
intersect(A,B)
setwd(~)
setwd("~/")
A<-read.table("test.tab")
A<-read.table("test.tsv")
A
a<-A[,1]
a
A<-as.matrix(read.table("test.tsv"))
A
a<-A[,1]
b<-B[,1]
b<-A[,1]
a
ab
b
intersect(a,b)
b<-A[,2]
a
b
intersect(a,b)
library("preprocessCore")
install.packages("preprocessCore")
?heatmap
source('~/Dropbox (個人)/saisentanRevise/R/simulateMultiRegionalSeq2.R')
?heatmap
q()
source('~/Dropbox (個人)/BEP3.0/R/test.R')
source('~/Dropbox (個人)/BEP3.0/R/test.R')
source('~/Dropbox (個人)/BEP3.0/R/test.R')
source('~/Dropbox (個人)/BEP3.0/R/test.R')
source('~/Dropbox (個人)/BEP3.0/R/test.R')
source('~/Dropbox (個人)/BEP3.0/R/test.R')
source('~/Dropbox (個人)/BEP3.0/R/test.R')
c
source('~/Dropbox (個人)/BEP3.0/R/test.R')
source('~/Dropbox (個人)/BEP3.0/R/test.R')
source('~/Dropbox (個人)/BEP3.0/R/test.R')
m<-apply(E, mean, 1)
m<-apply(E, 1, mean)
length(m)
(E-m)**2
apply((E-m)**2,2,sum)
squrt(apply((E-m)**2,2,sum))
sqrt(apply((E-m)**2,2,sum))
D<-sqrt(apply((E-m)**2,2,sum))
2**4
hist(D)
?seq
r<-seq(4, 6, 0.1)
r
r
r[1]
D<r[1]
which(D<r[1])
m<-apply(E, 1, mean)
D<-sqrt(apply((E-m)**2,2,sum))
r<-seq(1, 5, 0.1)
n<-NULL
for(i in 1:length(r)){
n<-c(n, length(which(D<r[i])))
}
plot(r,n)
source('~/Dropbox (個人)/BEP3.0/R/test.R')
plot(r,n)
plot(log(r),log(n))
n2<-log10(n)
r2<-log10(r)
tmp<-data.frame(cbind(n2,r2))
names(tmp)<-c("r","n")
plot(n ~ r, data = tmp)
result <- lm(n ~ r, data = tmp)
abline(result)
summary(result)
hist(apply(E,1,mean))
hist(log(apply(E,1,mean))
)
mutationProfileMatrixGeneSize <- 1000
plotHeatmap(E)
?dist
D<-my.dist(t(E))
headmap(D)
heatmap(D)
heatmap(as.matrix(D))
source(paste(homedir,"/", "myFunctions.R",sep=""))
mutationProfileMatrixGeneSize <- 300
H<-plotHeatmap(E)
mutationProfileMatrixGeneSize <- 500
H<-plotHeatmap(E)
alfreq<-apply(E,1,mean)
hist(alfreq,breaks = seq(0,1,0.05), main=NA, ann=F)
alfreq<-apply(E,1,mean)
hist(alfreq,breaks = seq(0,0.1,0.05), main=NA, ann=F)
?hist
my.sim<-function(x){
1-dist(x, method = "manhattan")/ncol(x)
}
cellSim<-my.sim(t(E))
cellSim<-as.matrix(cellSim)
diag(cellSim)<-1
H<-my.clust(cellSim)
H<-my.clst(cellSim)
H<-my.hclst(cellSim)
H<-my.hclust(cellSim)
dim(cellSim)
heatmap(cellSim, col=rev(my.col(100)), scale="none")
heatmap(cellSim, col=(my.col(100)), scale="none")
alfreq<-apply(E,1,mean)
H<-hist(alfreq,breaks = seq(0,1,0.05), main=NA, ann=F)
plot(H$count, log="y", type='h', lwd=10, lend=2)
AF<-1:20* 0.01
N<-NULL
for(i in 1:length(AF)){
af<-AF[i]
N<-c(N,length(getSubcloneProportionVector(E,af)))
}
y<-log(N)
x<-log(AF)
tmp<-data.frame(cbind(y,x))
names(tmp)<-c("x","y")
plot(y ~ x, data = tmp)
result <- lm(y ~ x, data = tmp)
abline(result)
summary(result)
y<-log10(N)
x<-log10(AF)
tmp<-data.frame(cbind(y,x))
names(tmp)<-c("x","y")
plot(y ~ x, data = tmp)
result <- lm(y ~ x, data = tmp)
abline(result)
summary(result)
AF
x
y<-log10(N)
x<-log10(AF)
tmp<-data.frame(cbind(y,x))
names(tmp)<-c("y","x")
plot(y ~ x, data = tmp)
result <- lm(y ~ x, data = tmp)
abline(result)
summary(result)
seq(0.01, 0.2. 0.01)
seq(0.01, 0.2, 0.01)
H<-plotHeatmap(E[apply(E,1,mean)>0.15,])
H<-plotHeatmap(E[apply(E,1,mean)>0.10,])
H<-plotHeatmap(E[apply(E,1,mean)>0.15,])
plot(sort(E[apply(E,1,mean)))
plot(sort(E[apply(E,1,mean),]))
e<-sort(E[apply(E,1,mean),])
length(e)
e<-(E[sort(apply(E,1,mean)),])
plot(e)
e
sort(apply(E,1,mean))
e<-sort(apply(E,1,mean))
plot(e)
plot(e, log="y"
)
e<-rev(sort(apply(E,1,mean)))
plot(e[1:1000], log="y")
plot(e[1:1000], log="xy")
e<-sort(apply(E,1,mean))
e
plot(1:length(e),e)
plot(1:length(e),e, log="y")
plot(1:length(e),e, log="xy")
e<-sort(apply(E,1,mean))
e<-e[e > 0.01]
plot(1:length(e),e)
